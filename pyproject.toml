[tool.poetry]
name = "onebox"
version = "0.1.0"
description = ""
authors = ["mgur <mgur@pop-os.localdomain>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = { extras = ["all"], version = "^0.103" }
SQLAlchemy = "^2.0.21"
alembic = "^1.12.0"
uvicorn = "^0.24.0"
psycopg = { extras = ["binary"], version = "^3.1.12" }
loguru = "^0.7.0"
passlib = { extras = ["argon2"], version = "^1.7.4" }
APScheduler = "4.0.0a3"
asyncpg = "^0.29.0"
fastapi-pagination = "^0.12.10"

[tool.poetry.group.dev.dependencies]
ruff = ">=0.1.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
select = [
    "ASYNC",
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    'Q',
    'RUF100',
    'C90', # is too complex ({complexity} > {max_complexity})
    'UP', #  upgrade syntax for newer versions of the language.
]
ignore = [
    #    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    #    "C901",  # too complex
"W191", # indentation contains tabs
]
target-version = "py310"
#flake8-quotes = {inline-quotes = 'single', multiline-quotes = 'double'}

[tool.ruff.format]
#quote-style = "single"
#indent-style = "tab"

[tool.ruff.isort]
combine-as-imports = true
known-third-party = ["fastapi", "pydantic", "starlette"]